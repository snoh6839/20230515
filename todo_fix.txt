//to-do
// 유저가 follow 를 버튼 누르면
// 해당 anime_no의 $_SESSION[_STR_LOGIN_ID] = user_no 인 곳의 
// follow_flag를 '1'이면 '0'으로 '0'이면 '1'로 업데이트 할 수 있게
// mvc모델로 만들기

// model
public function toggleFollow($userId, $animeNo)
    {
        // Check if the user is already following the anime
        $sql = 
        "SELECT "
        ." follow_flag "
        ." FROM "
        ." follows "
        ." WHERE "
        ." user_no = "
        . " ( SELECT "
        . " user_no "
        . " FROM "
        . " user_info "
        . " WHERE "
        . " user_id = :user_id "
        . " ) "
        ." anime_no = :animeNo";
        $params = array(
            ':user_id' => $userId
            , ':animeNo' => $animeNo
        );
        $stmt = $this->conn->prepare($sql);
        $stmt->execute($params);
        $row = $stmt->fetchAll();

        if ($row) {
            $followFlag = $row['follow_flag'] == '0' ? '1' : '0';
            $sql = 
            " UPDATE "
            ." follows "
            ." SET "
            ." follow_flag = :followFlag "
            ." WHERE "
            . " user_no = "
            . " ( SELECT "
            . " user_no "
            . " FROM "
            . " user_info "
            . " WHERE "
            . " user_id = :user_id "
            . " ) "
            ." AND "
            ." anime_no = :animeNo";
        } else {
            $followFlag = '0';
            $sql = 
            "INSERT INTO "
            ." follows "
            ." ( "
            ." user_no, anime_no, follow_flag "
            ." ) VALUES ( "
            ." :userNo, :animeNo, :followFlag "
            ." )";
        }

        $params = array(
            ':user_id' => $userId
            , ':animeNo' => $animeNo
            , ':followFlag' => $followFlag
        );
        $stmt = $this->conn->prepare($sql);
        $stmt->execute($params);
    }


//controller (추가 전)
public function detailGet()
    {
        $animeNo = 1;
        $this->addDynamicProperty("animeDetails", $this->animeDetailsGet($animeNo));
        $this->addDynamicProperty("animeCommentCount", $this->animeCommentCountGet($animeNo));
        
        $limit = 4;
        $this->addDynamicProperty("animeDetails5", $this->animeLimitDetailsGet($limit));
        $limit = 6;
        $this->addDynamicProperty("animeComment", $this->animeCommentGet($animeNo, $limit));
        if (isset($_GET['anime_no'])) {
            $animeNo = $_GET['anime_no'];
            $this->addViews($animeNo); // 조회수 증가
            
            $this->addDynamicProperty("animeDetails", $this->animeDetailsGet($animeNo));
            $this->addDynamicProperty("animeCommentCount", $this->animeCommentCountGet($animeNo));
            $this->addDynamicProperty("animeComment", $this->animeCommentGet($animeNo, $limit));
            
        }
        

        //animeCommentCount
        
        return "detail" . _EXTENTION_PHP;
    }

    public function detailPost()
    {
        $arrPost = $_POST;
        $animeNo = $arrPost["anime_no"];
        $userId = $_SESSION[_STR_LOGIN_ID];
        $commentCont = $arrPost["comment_content"];
        

        $data = array(
            'anime_no' => $animeNo,
            'id' => $userId,
            'comment_content' => $commentCont
        );
        $this->model->addComment($data);

        // $follow = array(
        //     'anime_no' => $animeNo,
        //     'user_id' => $userId
        // );
        // $this->model->toggleFollow($follow);
        return _BASE_REDIRECT . "/anime/detail?anime_no=". $animeNo;
    }

//출력 부분

<div class="anime__details__btn">
<!-- <form method="post" action="toggle_follow.php"> -->
    <!-- <input type="hidden" name="anime_no" value="<?php // echo isset($_GET["anime_no"]) ? $_GET["anime_no"] : 1;  ?>"> -->

        <!-- <a href="#" class="follow-btn"><i class="fa fa-heart"></i> Follow</a> -->

        <a href="#" class="follow-btn"><i class="fa fa-heart-o"></i> Follow</a>

<!-- </form> -->
<!-- <a href="#" class="watch-btn"><span>Watch Now</span> <i class="fa fa-angle-right"></i></a> -->
</div>